---
format: 
  revealjs:
    embed-resources: true 
    aspectratio: 169
    navigation: horizontal
    print-background: true
    partial-slides: true
    multiplex: false
    slide-number: c/t
    width: 1050
    height: 700
    incremental: false
    theme: techroom/pp.scss
    logo: images/pyl.png
    footer: "Jakub Štenc, Charles University, Czech Republic"
    background-transition: fade
    transition: none
    center-title-slide: false
    self_contained: false
editor: visual    
bibliography: techroom/references.bib
---



#  {background-image="images/90985051_3160362750661404_9121786830419656704_o.jpg" style="text-align: center;"}

<head>

<body>

<h2 style="text-align:center;color:white;">

::: {style="background-color: rgba(255, 255, 255, .4); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .5); border-radius: 5px;"}
Pollen deposition on *Succisa pratensis* in a dynamic plant-pollinator network Jakub Štenc
:::

</h2>

<h2 style="color:white;font-size: 30px;font-family: tahoma;text-align:center;">

::: {.absolute top="55%" left="65%"}
:::

</h2>

![](images/CREAF-SO-logo-pluma_blanca-ESP.png){.absolute bottom="0%" left="0" width="250"}

![](images/logoPrF1.png){.absolute bottom="8%" left="0%" width="184"} ![](images/pyl.png){.absolute bottom="8%" right="0%" width="184"}

</body>

</html>

##  {background-video="images/video_intro_reduced_shorter.mp4" background-video-loop="true" background-video-muted="true"}



```{css}
/*| echo: false */
figcaption {
  margin: 2px;
  line-height:1px;
  text-align: center;
}
```



::: {top="70" height="400"}


```{r setup}
#| include: false
#-------------READ ME-----------####

   # This script serves to the first exploration and pre-analyses of the data from Handrkov 2011-2024
   # Log of possible problems, changes and comments etrc. can be found here: https://docs.google.com/document/d/1iAdDP0WE-Z7KCjPCh7StA5mAd4BrJD0UY1tZUGOXFSA/edit?tab=t.0


#-------------READ ME - fin -----------#

# Packages #####

library(bipartite)
library("OpenImageR")
library("jpeg")
library(magick)
library(igraph)
library (iNEXT)
library("dplyr") 
library(tidyr)

## HanPolNet package ####

# Now, re-install the fresh, complete version from GitHub
#remove.packages("HanPolNet") # may be handy for updating the package

# It's a good idea to restart your R session now (Session > Restart R)

# Now, re-install the fresh, complete version from GitHub
devtools::install_github("Pollination-Ecology-Group/HanPolNet",force = TRUE)

# It should now load correctly
library(HanPolNet)
#--------------#

# Colour definitions  ####
seda <- rgb(150,150,150, max = 255, alpha = 60, names = "blue")
modra <- rgb(104, 99, 219, max = 255, alpha = 80, names = "blue") #rgb(99, 155, 202)
zelena <- rgb(0, 158, 115, max = 255)
cervena <- rgb(220, 40, 100, max = 255)

#--------------#



# Data import ####
jine_ctverce_spojene_11_24 <- read.csv("data/jine_ctverce_spojene_11_24.csv")
net1124_edited<- jine_ctverce_spojene_11_24
#--------------#

# Unification of identificator ####
# This identificator is to identify one visit of the plot - thus it combines year, plot, month, day, hour, minute
net1124_edited$id_i<-as.character(net1124_edited$id_i)
net1124_edited$id_i<-with(net1124_edited,paste(rok,osnova,mesic*100+den,hod*100+min,sep="-"))
unique(net1124_edited$id_i)
#--------------#


net1124_edited$rok <- factor(net1124_edited$rok, levels = c("11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"))

# Standardization by sampling effort ####

## Data preparation before standardization for sampling effort ####
net1124_edited <-  net1124_edited[which(!net1124_edited$beh%in%c("Kratiny12_beh14","Kratiny12_beh12","Kratiny12_beh13","Kratiny12_beh11","Handrkov12_beh11", "Handrkov12_beh12", "Handrkov12_beh13")), ] # only Handrkov

## Standardization computation ####
# Standartization is computed by taking all the individual visits to the plot (coded by id_i) and the number of visits to the plot per year is obtained in following code

poc.obejiti <-  net1124_edited %>% group_by(id_i, rok, osnova) %>% summarize(count=n()) 
poc.obejiti$obejito <- 1    

obejiti <-  tapply(poc.obejiti$obejito, list(poc.obejiti$osnova, poc.obejiti$rok),sum, na.rm=T) 


obejiti2 <- obejiti 
obejiti2 <- data.frame(obejiti2[!rownames(obejiti2)%in%c(30, 31, 42,43,97),])
colnames(obejiti2) <- c(11:24)
obejiti2$osnova <- rownames(obejiti2) 
obejiti3 <- obejiti2 %>% pivot_longer(cols=c(colnames(obejiti2)[-15]),
                                      names_to=c('rok'),
                                      values_to='obejito')

### plot sampling effort #####
#pdf("Sampling_effort.pdf")
par(mfrow=c(1,1))
plot(tapply(obejiti3$obejito, list( obejiti3$rok), mean, na.rm=T), type="n", main="Sampling effort per year", ylab = "Average number of censuses per plot", xlab="Year",  col=rgb(0,0,0,0.25), axes = F, cex.lab=1.5, ylim= c(0,50))

lines(tapply(obejiti3$obejito, list( obejiti3$rok), mean, na.rm=T), lwd = 2)

axis(1, at=c(1:14), labels = c(2011:2024))
axis(2)
mean_plots <-tapply(obejiti3$obejito, list( obejiti3$rok), mean, na.rm=T)

sd_plots <-tapply(obejiti3$obejito, list( obejiti3$rok), sd, na.rm=T)

# Vertical arrow
arrows(x0=c(1:14), y0=mean_plots-sd_plots, x1=c(1:14), y1=mean_plots+sd_plots, code=3, angle=90, length=0.1, col="black", lwd=2)

#dev.off()
#--------------#


## Merge sampling effort with original table #####
net1124_edited <- merge( jine_ctverce_spojene_11_24,obejiti3, by = c("osnova", "rok"), all = TRUE)  # Use all=TRUE for a full outer join


# Data preparation #####
## data cleaning ####
net1124_edited <-  net1124_edited[which(!net1124_edited$osnova%in%c("L0","L1","L10","L11","L12","L2","L3","L4","L5","L6","L7","L8","L9")), ] # only plots in the meadow
net1124_edited <-  net1124_edited[!net1124_edited$druhK_opraveno%in%c("UNDETERMINED_trifolium","Epilobium_sp","Kanutia_arvensis","Leontodon_sp","nic","Hypericum_perforatum","Lycopus_europaeus","Galium_boreale","Galium_glaucum"), ] # only plots in the meadow
net1124_edited <-  net1124_edited[which(net1124_edited$opyluje%in%c("T","?" )), ] # only pollinators

## Plant corrections ####
net1124_edited[net1124_edited$druhK_opraveno%in% c("Cuscuta_sp") ,]$druhK_opraveno <- "Cuscuta_europaea"
net1124_edited[net1124_edited$druhK_opraveno%in% c("Myosotis_sp") ,]$druhK_opraveno <- "Myosotis_palustris"
net1124_edited[net1124_edited$druhK_opraveno%in% c("Stellaria_sp") ,]$druhK_opraveno <- "Stellaria_graminea"
net1124_edited[net1124_edited$druhK_opraveno%in% c("Lysimachia_sp") ,]$druhK_opraveno <- "Lysimachia_vulgaris"

net1124_edited <- droplevels(net1124_edited)


## new variable - number of observations corrected by smapling eefort per plot within a year
net1124_edited$corrected_number <- net1124_edited$pocet.x/net1124_edited$obejito

#--------------#

# General network data ####

net1124  <-   apply( tapply(net1124_edited$pocet.x, list(net1124_edited$rok, net1124_edited$osnova), sum)/tapply(net1124_edited$obejito, list(net1124_edited$rok, net1124_edited$osnova), unique), 1, sum, na.rm=T)


net1124 <- tapply(net1124_edited$corrected_number, list(net1124_edited$druhK_opraveno, net1124_edited$sitodruh), sum)

net1124[is.na(net1124)] <- 0

#--------------#


## Datasets per individual years ####

for (i in unique(net1124_edited$rok)) {
  
  # Create the data matrix for the current value of i
  net <- with(net1124_edited[net1124_edited$rok %in% c(i),], 
              tapply(corrected_number, list(druhK_opraveno, sitodruh), sum))
  net[is.na(net)] <- 0
  
  # Dynamically assign the matrix to a variable named "net<i>"
  assign(paste("net", i, sep = ""), net)
}

nets <- paste("net", unique(net1124_edited$rok), sep = "")


## Datasets per hour ####

for (i in unique(net1124_edited$hod)) {
  
  # Create the data matrix for the current value of i
  net <- with(net1124_edited[net1124_edited$hod %in% c(i)&net1124_edited$rok=="21",], 
              tapply(corrected_number, list(druhK_opraveno, sitodruh), sum))
  net[is.na(net)] <- 0
  
  # Dynamically assign the matrix to a variable named "net<i>"
  assign(paste("net_hod_", i, sep = ""), net)
}

nets <- paste("net_hod_", unique(net1124_edited$hod), sep = "")



```


:::

::: {.absolute top="75%" left="55%"}
:::

## Introduction - visitation

![](images/pestrenky_round.png){fig-align="center"}

## Introduction - pollen transfer

![](images/E.interuptus_round.png){fig-align="center"}

## Introduction - deposition

![](images/stigma.png){fig-align="center" width="500"}

## Introduction - deposition

![](images/Blizna_Suc_pra_2_round.png){fig-align="center"}

## Introduction

:::::::: r-stack
::: fragment
![](images/unnamed-chunk-4-1.png){fig-align="center" width="620" top="-20"}
:::

::: fragment
![ ](images/pestrenky_round.png){fig-align="center" width="500" top="-20"}
:::

::: fragment
![ ](images/Blizna_Suc_pra_2_round.png){fig-align="center" width="520" top="-20"}
:::

:::: fragment
<h2 style="text-align:center;color:white;">

::: {style="background-color: rgba(0, 0, 0, .8); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .5); border-radius: 5px;;text-align:center;"}
Does pollinator sharing translate to pollen deposition?
:::

</h2>
::::
::::::::

::::::::

## Methods - the locality

::::: {layout-ncol="2"}
::: fragment
![[Czech Republic]{style="font-size: 32px;"}](images/Picture9.png){width="400"}
:::

::: fragment
![[Rich in flowers]{style="font-size: 32px;"}](images/banner.jpg){width="800"}
:::
:::::

::: {.absolute .fragment bottom="80" right="380"}
-   15 years of data collection (2011-2025)
:::

## Methods - permanent plots



---
fig-cap-location: top
---

```{=html}
<style>
 #slide1 .quarto-title-caption {
  font-size: 22px;
  }
</style>
```



<div>

:::::: {layout="[0.3,  0.3, 0.3]"}
::: {.fragment top="100" height="200"}
![[plots are marked]{style="font-size: 32px;"}](images/Picture3.jpg){width="300"}
:::

::: {.fragment top="100" height="200"}
![[recovered every year]{style="font-size: 32px;"}](images/Picture2.jpg){width="300"}
:::

::: {#sec-column .fragment top="100" height="700"}
![[93 plots in total]{style="font-size: 32px;"}](images/han_map_1.png)
:::
::::::

</div>

## Methods - plant-pollinator survey

<div>

::::: {layout="[0.5, 0.5]"}
::: {.fragment top="70" height="400"}
![[Plant survey]{style="font-size: 32px;"}](images/Picture1.jpg)
:::

::: {.fragment top="70" height="400"}
![[Pollinator survey]{style="font-size: 32px;"}](images/Picture5.jpg)
:::
:::::

</div>

## Methods - plant survey

<div>

::::: {layout="[0.5, 0.5]"}
::: {.fragment top="70" height="400"}
![](images/Picture1.jpg)
:::

<div>

<!-- empty column to create gap -->

</div>
:::::

</div>

::: {.absolute .fragment top="10%" left="55%"}
-   4 x 4 meter squares
-   divided to 64 0.5 x 0.5 subplots
-   Stalks of flowering plants are counted or scored presence/absence in subplots
-   2 times per sampling period
:::

## Methods - pollinator survey

<div>

::::: {layout="[0.5, 0.5]"}
::: {.fragment top="70" height="400"}
![](images/Picture5.jpg)
:::

<div>

<!-- empty column to create gap -->

</div>
:::::

</div>

::: {.absolute .fragment top="10%" left="55%"}
-   "Snapshot" of plant-pollinator interaction
-   = all interactions recorded, every flower unit observed once per sampling
-   20+ sampling per plot per year
-   97 629+ interactions recorded
:::

## Methods - plant-pollinator survey

![](images/DJI_0010.JPG)

## Methods - plant-pollinator survey

![](images/DJI_0058.JPG)

## Methods - plant-pollinator survey

![](images/DJI_0070.JPG)

## Methods - plant-pollinator survey

![](images/DJI_0092.JPG)

## Methods - plant-pollinator survey

:::: {layout="[0.95, 0.05]"}
::: {.fragment top="90" height="400"}
![](images/annual_variation.png){fig-align="center" fig-pos="b"}
:::
::::

## Methods - pollinator sharing



```{r, echo=FALSE, include=FALSE}
#| fig-align: center
#| fig-width: 5
#| fig-cap: 
#|   - "Plant-plant network"

par(mai=c(0.1,0.1,0.1,0.1),mfrow=c(1,1),tcl=-0.7,bg="transparent")

for (i in 21) {
  
  # Dynamically retrieve the matrix for the current year
  net_matrix <- get(paste("net", i, sep = ""))
  
  # Create a bipartite graph from the incidence matrix
  bg <- graph_from_biadjacency_matrix(net_matrix)
  
  # Generate bipartite projections
  proj <- bipartite_projection(bg, multiplicity = TRUE)
  
  # Detect communities using a clustering algorithm
  communities <- cluster_louvain(proj$proj1)
  
  # Assign cluster membership as a node color
  V(proj$proj1)$color <- membership(communities)
  
  # Define the layout for the circle
  l <- layout_in_circle(proj$proj1)
  
  # Define vertex size by degree
  deg <- centr_degree(proj$proj1, mode="all")
  V(proj$proj1)$size <- 5 * sqrt(deg$res)
  
  # Shorten species names to the desired format (e.g., nam_nam)
  V(proj$proj1)$name <- sapply(
    V(proj$proj1)$name, 
    function(x) {
      parts <- strsplit(x, "_")[[1]]
      paste0(substr(parts[1], 1, 3), "_", substr(parts[2], 1, 3))
    }
  )
  
  # Calculate label positions based on vertex coordinates
  label_pos <- apply(l, 1, function(coords) {
    angle <- atan2(coords[2], coords[1])  # Calculate angle
    list(
      x = coords[1] + 0.2 * cos(angle),
      y = coords[2] + 0.2 * sin(angle)
    )
  })
  
  # Extract label x and y positions
  label_x <- sapply(label_pos, function(pos) pos$x)
  label_y <- sapply(label_pos, function(pos) pos$y)
  
  # Plot the graph with adjusted labels
  plot(
    proj$proj1,
    layout = l,
    edge.width = E(proj$proj1)$weight*0.4,
    vertex.label = NA,  # Suppress default labels
    vertex.size = V(proj$proj1)$size*0.5,
    vertex.color = zelena,
    edge.color = modra
  )
  
}

```

```{r, echo=FALSE}

par(mai=c(0.1,0.1,0.1,0.1),mfrow=c(1,3),tcl=-0.7)

for (i in 22:24) {
  
  # Dynamically retrieve the matrix for the current year
  net_matrix <- get(paste("net", i, sep = ""))
  
  # Create a bipartite graph from the incidence matrix
  bg <- graph_from_incidence_matrix(net_matrix)
  
  # Generate bipartite projections
  proj <- bipartite_projection(bg, multiplicity = TRUE)
  
  # Detect communities using a clustering algorithm
  communities <- cluster_louvain(proj$proj1)
  
  # Assign cluster membership as a node color
  V(proj$proj1)$color <- membership(communities)
  
  # Define the layout for the circle
  l <- layout_in_circle(proj$proj1)
  
  # Define vertex size by degree
  deg <- centr_degree(proj$proj1, mode="all")
  V(proj$proj1)$size <- 5 * sqrt(deg$res)
  
  # Shorten species names to the desired format (e.g., nam_nam)
  V(proj$proj1)$name <- sapply(
    V(proj$proj1)$name, 
    function(x) {
      parts <- strsplit(x, "_")[[1]]
      paste0(substr(parts[1], 1, 3), "_", substr(parts[2], 1, 3))
    }
  )
  
  # Calculate label positions based on vertex coordinates
  label_pos <- apply(l, 1, function(coords) {
    angle <- atan2(coords[2], coords[1])  # Calculate angle
    list(
      x = coords[1] + 0.2 * cos(angle),
      y = coords[2] + 0.2 * sin(angle)
    )
  })
  
  # Extract label x and y positions
  label_x <- sapply(label_pos, function(pos) pos$x)
  label_y <- sapply(label_pos, function(pos) pos$y)
  
  # Plot the graph with adjusted labels
  plot(
    proj$proj1,
    layout = l,
    edge.width = E(proj$proj1)$weight**0.1,
    vertex.label = NA,  # Suppress default labels
    vertex.size = V(proj$proj1)$size,
    vertex.color = 3,
    edge.color = modra
  )
  
  mtext(paste("Year:", i), side = 3, line = -4)  
  # Add labels at adjusted positions
  text(
    x = label_x, 
    y = label_y, 
    labels = "",
    cex = 0.7
  )
}
```



## Methods - Pollen deposition

<div>

::::: {layout="[0.5, 0.5]"}
::: {.fragment top="70" height="400"}
![](images/Blizna_Suc_pra_2_round.png)
:::

<div>

<!-- empty column to create gap -->

</div>
:::::

</div>

::: {.absolute .fragment top="10%" left="55%"}
-   Target species: *Succisa pratensis*
-   2022 - 2023 - 2024
-   3 stigmas per plant collected
-   30 plants per year
-   outside of the plots
:::

## Results

## Plant abundance

::: fragment


```{r}
# 1. Get the necessary data
plant_data_std <- get_plant_data(output = "standardized")
plant_data_std  <- plant_data_std[plant_data_std$Suc_pra > 0,]
hca_results <- calculate_hca(plant_data_std, focal_species = "Suc_pra")

# 2. Generate the plot with stats (default)
p_year <- plot_hca_neighborhood(
  hca_data = hca_results,
  abundance_data = plant_data_std,
  focal_species = "Suc_pra",
  years = 22:24,
  colors = c(Conspecific = "lightseagreen",  `Heterospecific (HCA)`  = "lightcoral")
)
print(p_year)


```


:::

## Pollinator visitation

::: fragment


```{r}

# --- Test 3: The "per plot" view on a linear scale ---
# This is the same as Test 1, but with log_scale set to FALSE.
plot_linear <- plot_pollinator_diet(
  focal_plant = "Suc_pra",
  years = 22:24,
  is_pollinator = TRUE,
  summary_level = "plot",
  log_scale = FALSE
)
print(plot_linear)
```


:::

## Annual variation in pollinator sharing

::: fragment


```{r echo=FALSE}

## Pollen deposition between years
plot_by_year <- plot_pollen_deposition(colors = c(Conspecific = "lightseagreen", Heterospecific = "lightcoral"))
print(plot_by_year)
```


:::

## network structure

::: fragment


```{r}

# 1. Get the necessary plant abundance data first
plant_abund_std <- get_plant_data(output = "standardized")

par(mai=c(0.1,0.1,0.1,0.1),mfrow=c(1,3),tcl=-0.7,bg="transparent")

for (i in 22:24) {
  
plot_plant_sharing_network(
  years = i,
  is_pollinator = TRUE,
  size_by = "abundance",
  plant_abundance_data = plant_abund_std,
  focal_plant = "Suc_pra"
)

}

```


:::

## Future steps?

## EcoFlor 2026!

![](images/logo_without_bakground_small.png)

#  {background-image="images/Fin.jpg" style="text-align: center;"}

<head>

<body>

<h2 style="text-align:center;color:white;">

::: {style="background-color: rgba(255, 255, 255, .4); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .5); border-radius: 5px;"}
Thank you for your attention!
:::

</h2>



```{css}
.frosted {
  background-color: rgba(255, 255, 255, 0.4);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px); /* For Safari compatibility */
  padding: 10px;
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  width: fit-content;
  margin-left: auto;
  margin-right: auto;}
```



::: frosted
<h2 style="color:white;font-size: 30px;font-family: tahoma;text-align:center;">

Contact me!

jakubstenc\@gmail.com

+420 774 553 734

</h2>
:::

::: {.absolute top="55%" left="65%"}
:::

![](images/Logo%20EN%20BWlogo.png){.absolute bottom="60%" left="-10" width="200"}

![](images/CREAF-SO-logo-pluma_blanca-ESP.png){.absolute bottom="0%" left="0" width="250"}

![](images/logoPrF1.png){.absolute bottom="8%" left="-10%" width="184"} ![](images/pyl.png){.absolute bottom="8%" right="0%" width="184"}

</body>

</html>

